<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
	<class name="com.itheima.bean.Customer" table="cst_customer">
		<id name="cust_id">
			<generator class="native"></generator>
		</id>
	
		<property name="cust_name"/>
		<!-- <property name="cust_source"/>
		<property name="cust_industry"/>
		<property name="cust_level"/> -->
		<property name="cust_address"/>
		<property name="cust_phone"/>
		<property name="cust_user_id"/>
		<property name="cust_create_id"/>
		
		<!-- 客户和字典的关系是多对一
			name : 永远都是说属性名称 
			
			class : 代表和哪一个表相连
			
			
			
			1. 怎么不用建立双向关系呢？ 其实不用
				这里只是让客户发起了关系维护，
				也就是找客户，能够顺便找到字典数据。但是字典那边并没有发起关系维护，以后找字典数据，能找到客户数据么？
			比如： 我们想统计一下： VIP客户都有哪些公司？
			
			2. 这里怎么不写column ?
				column大部分场景都是那个意思， 就是这个属性在表里面叫什么名字。 只有一个地方表达的不是这个意思。 在set 一对多那个时候。
		 -->
		<many-to-one name="cust_source" class="com.itheima.bean.BaseDict"/>
		<many-to-one name="cust_industry" class="com.itheima.bean.BaseDict"/>
		<many-to-one name="cust_level" class="com.itheima.bean.BaseDict"/>
	</class>
</hibernate-mapping>    